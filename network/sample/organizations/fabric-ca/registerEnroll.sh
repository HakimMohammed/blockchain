#!/bin/bash

function createCompany() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/company.enset.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/company.enset.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:7054 --caname ca-company --tls.certfiles "${PWD}/organizations/fabric-ca/company/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-7054-ca-company.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-7054-ca-company.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-7054-ca-company.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-7054-ca-company.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/company.enset.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy company's CA cert to company's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/company.enset.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/company/ca-cert.pem" "${PWD}/organizations/peerOrganizations/company.enset.com/msp/tlscacerts/ca.crt"

  # Copy company's CA cert to company's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/company.enset.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/company/ca-cert.pem" "${PWD}/organizations/peerOrganizations/company.enset.com/tlsca/tlsca.company.enset.com-cert.pem"

  # Copy company's CA cert to company's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/company.enset.com/ca"
  cp "${PWD}/organizations/fabric-ca/company/ca-cert.pem" "${PWD}/organizations/peerOrganizations/company.enset.com/ca/ca.company.enset.com-cert.pem"

  infoln "Registering company_peer"
  set -x
  fabric-ca-client register --caname ca-company --id.name company_peer --id.secret company_peerpw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/company/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-company --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/company/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-company --id.name companyadmin --id.secret companyadminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/company/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the company_peer msp"
  set -x
  fabric-ca-client enroll -u https://company_peer:company_peerpw@localhost:7054 --caname ca-company -M "${PWD}/organizations/peerOrganizations/company.enset.com/peers/company_peer.company.enset.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/company/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/company.enset.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/company.enset.com/peers/company_peer.company.enset.com/msp/config.yaml"

  infoln "Generating the company_peer-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://company_peer:company_peerpw@localhost:7054 --caname ca-company -M "${PWD}/organizations/peerOrganizations/company.enset.com/peers/company_peer.company.enset.com/tls" --enrollment.profile tls --csr.hosts company_peer.company.enset.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/company/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/company.enset.com/peers/company_peer.company.enset.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/company.enset.com/peers/company_peer.company.enset.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/company.enset.com/peers/company_peer.company.enset.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/company.enset.com/peers/company_peer.company.enset.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/company.enset.com/peers/company_peer.company.enset.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/company.enset.com/peers/company_peer.company.enset.com/tls/server.key"

  infoln "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:7054 --caname ca-company -M "${PWD}/organizations/peerOrganizations/company.enset.com/users/User1@company.enset.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/company/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/company.enset.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/company.enset.com/users/User1@company.enset.com/msp/config.yaml"

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://companyadmin:companyadminpw@localhost:7054 --caname ca-company -M "${PWD}/organizations/peerOrganizations/company.enset.com/users/Admin@company.enset.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/company/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/company.enset.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/company.enset.com/users/Admin@company.enset.com/msp/config.yaml"
}

function createCustomer() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/customer.enset.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/customer.enset.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:8054 --caname ca-customer --tls.certfiles "${PWD}/organizations/fabric-ca/customer/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-8054-ca-customer.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-8054-ca-customer.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-8054-ca-customer.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-8054-ca-customer.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/customer.enset.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy customer's CA cert to customer's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/customer.enset.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/customer/ca-cert.pem" "${PWD}/organizations/peerOrganizations/customer.enset.com/msp/tlscacerts/ca.crt"

  # Copy customer's CA cert to customer's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/customer.enset.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/customer/ca-cert.pem" "${PWD}/organizations/peerOrganizations/customer.enset.com/tlsca/tlsca.customer.enset.com-cert.pem"

  # Copy customer's CA cert to customer's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/customer.enset.com/ca"
  cp "${PWD}/organizations/fabric-ca/customer/ca-cert.pem" "${PWD}/organizations/peerOrganizations/customer.enset.com/ca/ca.customer.enset.com-cert.pem"

  infoln "Registering customer_peer"
  set -x
  fabric-ca-client register --caname ca-customer --id.name customer_peer --id.secret customer_peerpw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/customer/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-customer --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/customer/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-customer --id.name customeradmin --id.secret customeradminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/customer/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the customer_peer msp"
  set -x
  fabric-ca-client enroll -u https://customer_peer:customer_peerpw@localhost:8054 --caname ca-customer -M "${PWD}/organizations/peerOrganizations/customer.enset.com/peers/customer_peer.customer.enset.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/customer/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/customer.enset.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/customer.enset.com/peers/customer_peer.customer.enset.com/msp/config.yaml"

  infoln "Generating the customer_peer-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://customer_peer:customer_peerpw@localhost:8054 --caname ca-customer -M "${PWD}/organizations/peerOrganizations/customer.enset.com/peers/customer_peer.customer.enset.com/tls" --enrollment.profile tls --csr.hosts customer_peer.customer.enset.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/customer/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/customer.enset.com/peers/customer_peer.customer.enset.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/customer.enset.com/peers/customer_peer.customer.enset.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/customer.enset.com/peers/customer_peer.customer.enset.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/customer.enset.com/peers/customer_peer.customer.enset.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/customer.enset.com/peers/customer_peer.customer.enset.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/customer.enset.com/peers/customer_peer.customer.enset.com/tls/server.key"

  infoln "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:8054 --caname ca-customer -M "${PWD}/organizations/peerOrganizations/customer.enset.com/users/User1@customer.enset.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/customer/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/customer.enset.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/customer.enset.com/users/User1@customer.enset.com/msp/config.yaml"

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://customeradmin:customeradminpw@localhost:8054 --caname ca-customer -M "${PWD}/organizations/peerOrganizations/customer.enset.com/users/Admin@customer.enset.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/customer/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/customer.enset.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/customer.enset.com/users/Admin@customer.enset.com/msp/config.yaml"
}

function createSupplierA() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/suppliera.enset.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/suppliera.enset.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:9054 --caname ca-supplierA --tls.certfiles "${PWD}/organizations/fabric-ca/supplierA/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-supplierA.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-supplierA.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-supplierA.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-supplierA.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/suppliera.enset.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy suppliera's CA cert to suppliera's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/suppliera.enset.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/suppliera/ca-cert.pem" "${PWD}/organizations/peerOrganizations/suppliera.enset.com/msp/tlscacerts/ca.crt"

  # Copy suppliera's CA cert to suppliera's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/suppliera.enset.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/suppliera/ca-cert.pem" "${PWD}/organizations/peerOrganizations/suppliera.enset.com/tlsca/tlsca.suppliera.enset.com-cert.pem"

  # Copy suppliera's CA cert to suppliera's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/suppliera.enset.com/ca"
  cp "${PWD}/organizations/fabric-ca/suppliera/ca-cert.pem" "${PWD}/organizations/peerOrganizations/suppliera.enset.com/ca/ca.suppliera.enset.com-cert.pem"

  infoln "Registering suppliera_peer"
  set -x
  fabric-ca-client register --caname ca-suppliera --id.name suppliera_peer --id.secret suppliera_peerpw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/suppliera/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-suppliera --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/suppliera/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-suppliera --id.name supplieraadmin --id.secret supplieraadminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/suppliera/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the suppliera_peer msp"
  set -x
  fabric-ca-client enroll -u https://suppliera_peer:suppliera_peerpw@localhost:9054 --caname ca-suppliera -M "${PWD}/organizations/peerOrganizations/suppliera.enset.com/peers/suppliera_peer.suppliera.enset.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/suppliera/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/suppliera.enset.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/suppliera.enset.com/peers/suppliera_peer.suppliera.enset.com/msp/config.yaml"

  infoln "Generating the suppliera_peer-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://suppliera_peer:suppliera_peerpw@localhost:9054 --caname ca-suppliera -M "${PWD}/organizations/peerOrganizations/suppliera.enset.com/peers/suppliera_peer.suppliera.enset.com/tls" --enrollment.profile tls --csr.hosts suppliera_peer.suppliera.enset.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/suppliera/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/suppliera.enset.com/peers/suppliera_peer.suppliera.enset.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/suppliera.enset.com/peers/suppliera_peer.suppliera.enset.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/suppliera.enset.com/peers/suppliera_peer.suppliera.enset.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/suppliera.enset.com/peers/suppliera_peer.suppliera.enset.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/suppliera.enset.com/peers/suppliera_peer.suppliera.enset.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/suppliera.enset.com/peers/suppliera_peer.suppliera.enset.com/tls/server.key"

  infoln "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:9054 --caname ca-suppliera -M "${PWD}/organizations/peerOrganizations/suppliera.enset.com/users/User1@suppliera.enset.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/suppliera/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/suppliera.enset.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/suppliera.enset.com/users/User1@suppliera.enset.com/msp/config.yaml"

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://supplieraadmin:supplieraadminpw@localhost:9054 --caname ca-suppliera -M "${PWD}/organizations/peerOrganizations/suppliera.enset.com/users/Admin@suppliera.enset.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/suppliera/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/suppliera.enset.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/suppliera.enset.com/users/Admin@suppliera.enset.com/msp/config.yaml"
}

function createSupplierB() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/supplierb.enset.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/supplierb.enset.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:10054 --caname ca-supplierB --tls.certfiles "${PWD}/organizations/fabric-ca/supplierB/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-10054-ca-supplierB.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-10054-ca-supplierB.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-10054-ca-supplierB.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-10054-ca-supplierB.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/supplierb.enset.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy supplierb's CA cert to supplierb's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/supplierb.enset.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/supplierb/ca-cert.pem" "${PWD}/organizations/peerOrganizations/supplierb.enset.com/msp/tlscacerts/ca.crt"

  # Copy supplierb's CA cert to supplierb's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/supplierb.enset.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/supplierb/ca-cert.pem" "${PWD}/organizations/peerOrganizations/supplierb.enset.com/tlsca/tlsca.supplierb.enset.com-cert.pem"

  # Copy supplierb's CA cert to supplierb's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/supplierb.enset.com/ca"
  cp "${PWD}/organizations/fabric-ca/supplierb/ca-cert.pem" "${PWD}/organizations/peerOrganizations/supplierb.enset.com/ca/ca.supplierb.enset.com-cert.pem"

  infoln "Registering supplierb_peer"
  set -x
  fabric-ca-client register --caname ca-supplierb --id.name supplierb_peer --id.secret supplierb_peerpw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/supplierb/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering user"
  set -x
  fabric-ca-client register --caname ca-supplierb --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/supplierb/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-supplierb --id.name supplierbadmin --id.secret supplierbadminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/supplierb/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the supplierb_peer msp"
  set -x
  fabric-ca-client enroll -u https://supplierb_peer:supplierb_peerpw@localhost:10054 --caname ca-supplierb -M "${PWD}/organizations/peerOrganizations/supplierb.enset.com/peers/supplierb_peer.supplierb.enset.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/supplierb/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/supplierb.enset.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/supplierb.enset.com/peers/supplierb_peer.supplierb.enset.com/msp/config.yaml"

  infoln "Generating the supplierb_peer-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://supplierb_peer:supplierb_peerpw@localhost:10054 --caname ca-supplierb -M "${PWD}/organizations/peerOrganizations/supplierb.enset.com/peers/supplierb_peer.supplierb.enset.com/tls" --enrollment.profile tls --csr.hosts supplierb_peer.supplierb.enset.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/supplierb/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/supplierb.enset.com/peers/supplierb_peer.supplierb.enset.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/supplierb.enset.com/peers/supplierb_peer.supplierb.enset.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/supplierb.enset.com/peers/supplierb_peer.supplierb.enset.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/supplierb.enset.com/peers/supplierb_peer.supplierb.enset.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/supplierb.enset.com/peers/supplierb_peer.supplierb.enset.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/supplierb.enset.com/peers/supplierb_peer.supplierb.enset.com/tls/server.key"

  infoln "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:10054 --caname ca-supplierb -M "${PWD}/organizations/peerOrganizations/supplierb.enset.com/users/User1@supplierb.enset.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/supplierb/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/supplierb.enset.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/supplierb.enset.com/users/User1@supplierb.enset.com/msp/config.yaml"

  infoln "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://supplierbadmin:supplierbadminpw@localhost:10054 --caname ca-supplierb -M "${PWD}/organizations/peerOrganizations/supplierb.enset.com/users/Admin@supplierb.enset.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/supplierb/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/supplierb.enset.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/supplierb.enset.com/users/Admin@supplierb.enset.com/msp/config.yaml"
}

function createOrderer() {
  infoln "Enrolling the CA admin"
  mkdir -p organizations/ordererOrganizations/enset.com

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/ordererOrganizations/enset.com

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:11054 --caname ca-orderer --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-11054-ca-orderer.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-11054-ca-orderer.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-11054-ca-orderer.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-11054-ca-orderer.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/ordererOrganizations/enset.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy orderer org's CA cert to orderer org's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/ordererOrganizations/enset.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem" "${PWD}/organizations/ordererOrganizations/enset.com/msp/tlscacerts/tlsca.enset.com-cert.pem"

  # Copy orderer org's CA cert to orderer org's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/ordererOrganizations/enset.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem" "${PWD}/organizations/ordererOrganizations/enset.com/tlsca/tlsca.enset.com-cert.pem"

  infoln "Registering orderer"
  set -x
  fabric-ca-client register --caname ca-orderer --id.name orderer --id.secret ordererpw --id.type orderer --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Registering the orderer admin"
  set -x
  fabric-ca-client register --caname ca-orderer --id.name ordererAdmin --id.secret ordererAdminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  infoln "Generating the orderer msp"
  set -x
  fabric-ca-client enroll -u https://orderer:ordererpw@localhost:11054 --caname ca-orderer -M "${PWD}/organizations/ordererOrganizations/enset.com/orderers/orderer.enset.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/ordererOrganizations/enset.com/msp/config.yaml" "${PWD}/organizations/ordererOrganizations/enset.com/orderers/orderer.enset.com/msp/config.yaml"

  infoln "Generating the orderer-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://orderer:ordererpw@localhost:11054 --caname ca-orderer -M "${PWD}/organizations/ordererOrganizations/enset.com/orderers/orderer.enset.com/tls" --enrollment.profile tls --csr.hosts orderer.enset.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the orderer's tls directory that are referenced by orderer startup config
  cp "${PWD}/organizations/ordererOrganizations/enset.com/orderers/orderer.enset.com/tls/tlscacerts/"* "${PWD}/organizations/ordererOrganizations/enset.com/orderers/orderer.enset.com/tls/ca.crt"
  cp "${PWD}/organizations/ordererOrganizations/enset.com/orderers/orderer.enset.com/tls/signcerts/"* "${PWD}/organizations/ordererOrganizations/enset.com/orderers/orderer.enset.com/tls/server.crt"
  cp "${PWD}/organizations/ordererOrganizations/enset.com/orderers/orderer.enset.com/tls/keystore/"* "${PWD}/organizations/ordererOrganizations/enset.com/orderers/orderer.enset.com/tls/server.key"

  # Copy orderer org's CA cert to orderer's /msp/tlscacerts directory (for use in the orderer MSP definition)
  mkdir -p "${PWD}/organizations/ordererOrganizations/enset.com/orderers/orderer.enset.com/msp/tlscacerts"
  cp "${PWD}/organizations/ordererOrganizations/enset.com/orderers/orderer.enset.com/tls/tlscacerts/"* "${PWD}/organizations/ordererOrganizations/enset.com/orderers/orderer.enset.com/msp/tlscacerts/tlsca.enset.com-cert.pem"

  infoln "Generating the admin msp"
  set -x
  fabric-ca-client enroll -u https://ordererAdmin:ordererAdminpw@localhost:11054 --caname ca-orderer -M "${PWD}/organizations/ordererOrganizations/enset.com/users/Admin@enset.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/ordererOrganizations/enset.com/msp/config.yaml" "${PWD}/organizations/ordererOrganizations/enset.com/users/Admin@enset.com/msp/config.yaml"
}